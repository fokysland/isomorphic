{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/mnt/f/Main/sites/isomorphic/packages/web/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/cjs/exports/View\";\nimport { Text } from '@iso/shared';\n\nvar IndexPage = function IndexPage() {\n  _s();\n\n  var _useState = useState(false),\n      isClient = _useState[0],\n      setIsClient = _useState[1];\n\n  useEffect(function () {\n    setIsClient(false);\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), isClient && __jsx(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 20\n    }\n  }));\n};\n\n_s(IndexPage, \"k460N28PNzD7zo1YW47Q9UigQis=\");\n\n_c = IndexPage;\nexport default IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["/mnt/f/Main/sites/isomorphic/packages/web/pages/index.tsx"],"names":["React","useEffect","useState","Text","IndexPage","isClient","setIsClient"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAIA,SAASC,IAAT,QAAqB,aAArB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,kBACUF,QAAQ,CAAC,KAAD,CADlB;AAAA,MACfG,QADe;AAAA,MACLC,WADK;;AAGtBL,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGD,QAAQ,IAAI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFf,CADF;AAMD,CAbD;;GAAMD,S;;KAAAA,S;AAeN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { View } from 'react-native';\n\nimport { Text } from '@iso/shared';\n\nconst IndexPage = () => {\n  const [isClient, setIsClient] = useState(false);\n\n  useEffect(() => {\n    setIsClient(false);\n  }, []);\n\n  return (\n    <div>\n      <Text />\n      {isClient && <View />}\n    </div>\n  );\n};\n\nexport default IndexPage;\n"]},"metadata":{},"sourceType":"module"}